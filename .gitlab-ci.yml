# This file is a template, and might need editing before it works on your project.
# Official docker image.
image: docker:19.03.8

services:
  - docker:19.03.8-dind

.default1: &default1
  stage: build
  cache:
    key: docker
    paths:
    - .cache

variables:
  # Use TLS https://docs.gitlab.com/ee/ci/docker/using_docker_build.html#tls-enabled
  DOCKER_HOST: tcp://docker:2376
  DOCKER_TLS_CERTDIR: "/certs"
  DOCKER_DRIVER: overlay2
#  DOCKER_HOST: tcp://localhost:2375
#  DOCKER_TLS_CERTDIR: ""
  DOCKER_BUILDKIT: 1
  LATEST: "$CI_REGISTRY_IMAGE"
before_script:
  - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY

build-master:
  <<: *default1
  stage: build
  script:
    - docker build --pull -t "$CI_REGISTRY_IMAGE" .
    - docker push "$CI_REGISTRY_IMAGE"
  only:
    - master

build:
  <<: *default1
  script:
#    - test -f .cache/img.tar &&  docker load  <  .cache/img.tar
    - docker pull $CI_REGISTRY_IMAGE:latest || true
    - echo -e "FROM alpine\nRUN apk add --no-cache git" | docker build --cache-from $CI_REGISTRY_IMAGE:latest --tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA --tag $CI_REGISTRY_IMAGE:latest  -
#    - mkdir -p .cache
#    - docker save $LATEST > .cache/img.tar && ls -lA .cache
    - docker push $LATEST
  #  - docker info && ls -lA  /var/lib/ && mount  && ls -lA /sys/devices/virtual/dmi/id/
   # - df -h
    #- docker build --pull -t "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG" .
    #- docker push "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG"
    #- docker run --rm "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG" > boot2docker.iso
  except:
    - master
#  artifacts:
#      paths:
#        - ./boot2docker.iso
