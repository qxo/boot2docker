language: bash

sudo: required
services:
  - docker

script:
  - kernDups="$(files/kernel-config.d/.check-dups.sh)" && [ -z "$kernDups" ] || { echo >&2 "KERNEL CONFIG DUPLICATES!"; echo >&2 "$kernDups"; false; }
  - |
    set -e
    docker build --rm --cache-from boot2docker/boot2docker  -t boot2docker/boot2docker .
    docker run --rm boot2docker/boot2docker > ${TRAVIS_BUILD_DIR}/boot2docker.iso
    if [ -z "${DEPLOY_ISO_TO_GITHUB}" ] ; then  export DEPLOY_ISO_TO_GITHUB=false ; fi
    if [ "${DEPLOY_ISO_TO_BINTRAY}" = "true"  ] ; then export ARTIFACT_VERSION=$(cat VERSION);  export ARTIFACT_DATE=$(date +%Y-%m-%d) ; cp bintary_desc.json.tpl ${TRAVIS_BUILD_DIR}/bintary_desc.json ; sed -i "s#ARTIFACT_VERSION#${ARTIFACT_VERSION}#g" ${TRAVIS_BUILD_DIR}/bintary_desc.json ; sed -i "s#ARTIFACT_DATE#${ARTIFACT_DATE}#g" ${TRAVIS_BUILD_DIR}/bintary_desc.json ;sed -i "s#TARGET_DIR#${TRAVIS_BUILD_DIR}#g" ${TRAVIS_BUILD_DIR}/bintary_desc.json; sed -i "s#DESC#$(git branch -vv | grep '*')#g" ${TRAVIS_BUILD_DIR}/bintary_desc.json;fi

cache:
  bundler: true
  directories:
  - $HOME/docker
before_cache:
- imglist=$(find  $HOME/docker/ -name "*.tar.gz"); test -z "$imglist" && test ! "$FORCE_CACHE_IF_NOT" = "false"  && NOT_CACHE_IMG_AFTER_BUILD=false ; test -n "$imglist" && test -z "$NOT_CACHE_IMG_AFTER_BUILD" && NOT_CACHE_IMG_AFTER_BUILD=true ; echo "$imglist"; if [  ! "${NOT_CACHE_IMG_AFTER_BUILD}" = "true"  ] ;  then   mkdir -p $HOME/docker && docker images   --filter='dangling=false' --format '{{.Repository}}:{{.Tag}}' | grep -v none | xargs -n 1 -I {x} -t sh -c 'docker save {x} | gzip -2 > $HOME/docker/$(echo {x} | md5sum | awk "{print \$1}" ).tar.gz' ; echo ok ;fi
- bash -c " ls -lA $HOME/docker/ "
before_install:
- if [ ! "${NOT_LOAD_CACHE_BEFORE_BUILD}" = "true"  ] ; then  if [[ -d $HOME/docker ]]; then  imglist=$(find  $HOME/docker/ -name "*.tar.gz"); echo "$imglist"; echo "${imglist}" | xargs -t -I {file} sh -c "zcat {file} | docker load";  fi ;  bash -c "docker images -a --filter='dangling=false'" ; fi

after_script:
  - docker images
  - ls -lh boot2docker.iso

deploy:
- provider: releases
  api_key: ${github_api_key}
  file: boot2docker.iso
  skip_cleanup: true
  on:
    tags: true
    condition: $DEPLOY_ISO_TO_GITHUB = true

#https://github.com/bintray/bintray-examples/blob/master/travis-ci-example
#https://docs.travis-ci.com/user/deployment/bintray/
- provider: bintray
  file: "${TRAVIS_BUILD_DIR}/bintary_desc.json"
  user: "${bintray_user}"
  key: ${bintray_key}
#  passphrase: "Optional. In case a passphrase is configured on Bintray ddand GPG signing is used"
#  dry-run: ${bintray_dry_run}
  on:
    tags: true
    condition: $DEPLOY_ISO_TO_BINTRAY = true
# vim:set et ts=2 sw=2: